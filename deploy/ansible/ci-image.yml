- hosts: localhost
  gather_facts: no
  connection: ssh
  vars:
    identifier: unknown
    source_path: "/home/jenkins/src/shakenfist/"
    base_image: "ubuntu:20.04"
    base_image_user: "ubuntu"

  tasks:
    - name: Create an instance
      sf_instance:
        name: "rebuild"
        cpu: 4
        ram: 4096
        disks:
          - "30@{{base_image}}"
        networkspecs:
          - network_uuid={{identifier}}
        ssh_key: "{{ lookup('file', '/srv/github/id_ci.pub') }}"
        namespace: "{{identifier}}"
        state: present
      register: imagerebuild_instance

    - name: Add to ansible (force python3)
      add_host:
        hostname: imagerebuild
        ansible_ssh_host: "{{imagerebuild_instance['meta']['interfaces'][0]['ipv4']}}"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o GlobalKnownHostsFile=/dev/null -o UserKnownHostsFile=/dev/null"
        ansible_ssh_user: "{{base_image_user}}"
        ansible_ssh_private_key_file: "/srv/github/id_ci"
        ansible_python_interpreter: "/usr/bin/python3"
        sf_instance_uuid: "{{imagerebuild_instance['meta']['uuid']}}"
        groups: sfall
      when: base_image == "debian:11"

    - name: Add to ansible (detect system python)
      add_host:
        hostname: imagerebuild
        ansible_ssh_host: "{{imagerebuild_instance['meta']['interfaces'][0]['ipv4']}}"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o GlobalKnownHostsFile=/dev/null -o UserKnownHostsFile=/dev/null"
        ansible_ssh_user: "{{base_image_user}}"
        ansible_ssh_private_key_file: "/srv/github/id_ci"
        sf_instance_uuid: "{{imagerebuild_instance['meta']['uuid']}}"
        groups: sfall
      when: base_image != "debian:11"

    - name: Log instance
      debug:
        msg: "{{hostvars['imagerebuild']}}"

    - name: Wait for instance to present an "OpenSSH" prompt
      wait_for:
        port: 22
        host: "{{hostvars['imagerebuild']['ansible_ssh_host']}}"
        search_regex: OpenSSH
        delay: 10

- hosts: sfall
  gather_facts: yes
  become: true
  vars:
    source_path: "/home/jenkins/src/shakenfist/"

  tasks:
    # As recommended on the ansible apt module documentation...
    - name: Install packages only when the apt process is not locked
      apt:
        name: bash
        state: present
      register: apt_action
      retries: 100
      until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

    # I am unsure why I need to manually force this, but I do need to.
    - name: Force an apt-get update
      shell: apt-get update

    - name: apt-get dist-upgrade
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes

    # NOTE(mikal): I don't love this, as it increases the risk that we will
    # miss a package in getsf, but its so slow to install these without
    # pre-caching that doing this saves an hour off the CI job duration.
    - name: Install packages which CI uses, to make CI runs faster
      apt:
        name:
          - ack
          - ansible
          - arping
          - bridge-utils
          - build-essential
          - cpu-checker
          - dnsmasq
          - dnsutils
          - git
          - libffi-dev
          - libmagic-dev
          - libssl-dev
          - libvirt-daemon-system
          - libvirt-dev
          - lm-sensors
          - net-tools
          - ovmf
          - prometheus-node-exporter
          - pwgen
          - python3
          - python3-cffi
          - python3-dev
          - python3-fixtures
          - python3-git
          - python3-grpcio
          - python3-libvirt
          - python3-pip
          - python3-venv
          - python3-wheel
          - qemu-kvm
          - tox
          - unzip
          - zip
        state: latest

    - name: Install packages that github actions use
      apt:
        name:
          - jq

    - name: Install tox and dependencies via apt on Ubuntu
      apt:
        name:
          - tox
      when: ansible_distribution == 'Ubuntu'

    # This is driven by issues with the version of tox packaged on Debian 10
    - name: Install tox and dependencies via pip on Debian
      shell: pip3 install -U tox filelock
      when: ansible_distribution == 'Debian'

    - name: Cleanup cloud-init
      shell: cloud-init clean

    - name: Try and avoid the disk being corrupt when snapshot
      shell: |
        sleep 5
        sync
        sleep 1
        sync
        sleep 1
        sync
        sleep 1

- hosts: localhost
  gather_facts: no
  connection: ssh
  vars:
    identifier: cron
    base_image_user: "ubuntu"
    label: "sfci-image"

  tasks:
    - name: Snapshot the instance
      sf_snapshot:
        instance_uuid: "{{hostvars['imagerebuild']['sf_instance_uuid']}}"
        state: present
      register: cisnapshot

    - name: Log snapshot details
      debug:
        msg: "{{cisnapshot}}"

    - name: Record the snapshot uuid
      set_fact:
        snapshot_uuid: "{{cisnapshot['meta']['vda']['blob_uuid']}}"

    - name: Log snapshot uuid
      debug:
        msg: "{{hostvars['localhost']['snapshot_uuid']}}"

    - name: Test the snapshot
      sf_instance:
        name: "test"
        cpu: 4
        ram: 4096
        disks:
          - "30@sf://blob/{{hostvars['localhost']['snapshot_uuid']}}"
        networkspecs:
          - network_uuid={{identifier}}
        ssh_key: "{{ lookup('file', '/srv/github/id_ci.pub') }}"
        namespace: "{{identifier}}"
        state: present
      register: imagetest_instance

    - name: Add to ansible (force python3)
      add_host:
        hostname: imagetest
        ansible_ssh_host: "{{imagetest_instance['meta']['interfaces'][0]['ipv4']}}"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o GlobalKnownHostsFile=/dev/null -o UserKnownHostsFile=/dev/null"
        ansible_ssh_user: "{{base_image_user}}"
        ansible_ssh_private_key_file: "/srv/github/id_ci"
        ansible_python_interpreter: /usr/bin/python3
        sf_instance_uuid: "{{imagetest_instance['meta']['uuid']}}"
        groups: sfall
      when: base_image == "debian:11"

    - name: Add to ansible (detect system python)
      add_host:
        hostname: imagetest
        ansible_ssh_host: "{{imagetest_instance['meta']['interfaces'][0]['ipv4']}}"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o GlobalKnownHostsFile=/dev/null -o UserKnownHostsFile=/dev/null"
        ansible_ssh_user: "{{base_image_user}}"
        ansible_ssh_private_key_file: "/srv/github/id_ci"
        sf_instance_uuid: "{{imagetest_instance['meta']['uuid']}}"
        groups: sfall
      when: base_image != "debian:11"

    - name: Log instance
      debug:
        msg: "{{hostvars['imagetest']}}"

    - name: Wait for test instance to present an "OpenSSH" prompt
      wait_for:
        port: 22
        host: "{{hostvars['imagetest']['ansible_ssh_host']}}"
        search_regex: OpenSSH
        delay: 10

- hosts: imagetest
  gather_facts: no
  become: true

  tasks:
    - name: Do a dist-upgrade to ensure that we can sudo and manage packages
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes

- hosts: localhost
  gather_facts: no
  connection: ssh

  tasks:
    # NOTE(mikal): this is obviously a placeholder for now, but it explains
    # what I need to add to the client to make this work.
    - name: Add the snapshot to the label
      shell: |
        sf-client label update "{{label}}" "{{hostvars['localhost']['snapshot_uuid']}}"

    - name: Log the snapshot update
      debug:
        msg: "Set label {{label}} to blob uuid {{hostvars['localhost']['snapshot_uuid']}}"

    - name: Delete the snapshot (its a label now if it passed)
      sf_snapshot:
        uuid: "{{cisnapshot['meta']['vda']['artifact_uuid']}}"
        state: absent

    - name: Delete test instance
      sf_instance:
        uuid: "{{hostvars['imagetest']['sf_instance_uuid']}}"
        namespace: "{{identifier}}"
        state: absent

    - name: Delete build instance
      sf_instance:
        uuid: "{{hostvars['imagerebuild']['sf_instance_uuid']}}"
        namespace: "{{identifier}}"
        state: absent