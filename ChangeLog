CHANGES
=======

* Move metrics to etcd
* Record console and VDI ports in use in etcd
* Move node registration to etcd
* Add etcd into the mix, this is the plan for locking
* Add some notes on how to do releases

0.1
---

* Update readme ready for release tag
* Copy cleanup script
* Handle DB migrations
* Install shakenfist from a wheel
* Move python unit tests into ansible
* Sort debian packages
* Update changelog
* Deploy terraform provider and an example to /root
* Typo fix
* Continued work on terraform provider
* Handle empty string for disk types
* Working on adding instances to terraform provider
* The terraform provider can create networks
* A first cut of a terraform provider, only for networks!
* Move golang REST client to its own repo so 'go get' works
* Add a module for the golang REST API
* Remove compiled example
* Add missing network create and delete methods
* Add a compiled version of the example
* Implement a simple golang REST client
* Give GCP test runs a few more resources
* Add unit tests for images
* Identify images and only transcode and resize as required
* Remove unused variable
* Make ansible paths a little more clear
* Expose network card model as part of the netspec
* Use system packages for mariadb, and handle the DB being on a hypervisor node
* Update README
* Make deletes a little more likely while testing
* Catch resource monitor errors instead of crashing
* Tweaks to test\_final to catch up with states
* Put the all argument on the right method
* Fix playbook name
* Further state management
* Correctly undefine domains upon delete
* Add instance states
* A simple scheduler test script
* Fix path to test
* Split out tests into logical groupings
* Safety checks
* Track metrics for each hypervisor, use them to schedule
* Update main.py
* Example OpenStack terraform
* Add more detailed specification options for disks and networks
* Add test for instances with no networking
* Setup rsyslog to aid debugging
* Add test for snapshots of CDROMs
* Add additional tests for snapshots, fix API bugs found along the way
* Turn off MySQL query caching
* Support smaller AWS metal deployments
* Floating IPs work!
* GCP gives us DNS, AWS doesn't
* AWS needs some additional security groups
* AWS metal NVME disks are a bit more complicated, as root moves around
* Support for AWS metal as a platform
* More CDROM support
* Better support attaching ISOs to instances
* Fix a bug with network deletes
* Record events to the database
* More floating IP bug fixes
* Refactor deployment to support clouds other than GCP
* Fix missing export for network interface
* Add floating config IP to deployment
* Add tests for floating IP, fix bugs found by tests
* Check for valid netblocks when creating networks
* Add an ansible module for creating and deleting instances
* Implement floating IPs
* First baby steps towards having an ansible module
* Users can request specific IP addresses for interfaces
* Fix small bugs in JSON output
* Better REST API error checking, and JSON mode in client
* Add JSON as a client output format
* Add missing file
* Allow networks to have names
* More network tests and associated fixes
* Get rid of that annoying impl thing
* Enable overlapping virtual networks
* Correctly delete networks
* Move the DHCP server onto the router IP
* Move to dnsmasq for DHCP services
* Add support for userdata and sshkeys
* Implement pause and unpause
* Various changes:
* Chasing why meshes don't work after hypervisor reboot
* Networking changes:  - have a single network node per virtual network  - better mesh reliability  - provide more networking information in config drive, avoiding the use of DHCP in many cases
* Rejig how terraform is run
* Verify that internet connectivity works
* Rewrites:
* Convert sf-client to using a REST API
* Start implementing simple functional tests in ansible
* Usability tweaks to the client
* Multinode deployment tooling
* Remove snapshot records (but not data) when deleting an instance
* Further snapshot work
* Working towards snapshots
* Support NAT for virtual networks
* Client prints status messages
* Track instances and their IP allocations in the database
* Rearrange how disks are specified
* Make network model configurable and fix ubuntu download bug
* Make disk bus configurable
* Pass through CPU features to instances
* Starting to think about network controllers
* Hacking on the client
* Remove historic block comment
* Remove regrettable debugging output
* Include bridge utils in install
* Always restart the DB container
* Update template to include extra disks
* Support more than one disk on an instance
* Resolve short names for images, and decompress when required
* Add test infrastructure
* Work around missing docker packages for eoan
* Detect the NIC to configure meshes on
* Early thoughts about a client
* Run the daemon as a systemd unit
* Fully automate node setup
* Start automating deployment
* Tweak process name
* Add networks to database
* Move node list to db
* Working on adding MySQL
* Tweak bridge setup
* Allocate IP addresses to instances
* Its ok for the DHCP container to not already exist
* Don't clobber imports with variables
* Always regenerate DHCP config, even if the interface exists
* Add missing import
* Get method name right
* Make dhcp peer interface names shorter
* Add dhcp support
* Implement vxlan mesh creation
* Use member variable
* Refactor to record total start time as well
* Slightly nicer instance name handling
* A more organized logging framework
* Use cirros
* Tweaks for debian
* Add a README
* And now we can start instances
* Initial commit
* Create root disks including image caching and transcoding
* Generating a reasonable looking config drive
